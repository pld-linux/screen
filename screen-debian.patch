diff -urN screen-3.9.8.org/Makefile.in screen-3.9.8/Makefile.in
--- screen-3.9.8.org/Makefile.in	Sun Dec  3 12:12:06 2000
+++ screen-3.9.8/Makefile.in	Sun Dec  3 12:15:50 2000
@@ -21,10 +21,10 @@
 ETCSCREENRC = `sed < config.h -n -e '/define ETCSCREENRC/s/^.*"\([^"]*\)"/\1/p'`
 
 CC = @CC@
-CFLAGS = -O
+CFLAGS = @CFLAGS@ @USEPAM@
 CPPFLAGS = @CPPFLAGS@
 LDFLAGS =
-LIBS = @LIBS@
+LIBS = @LIBS@ @LIBPAM@
 
 CPP=@CPP@
 CPP_DEPEND=$(CC) -MM
diff -urN screen-3.9.8.org/attacher.c screen-3.9.8/attacher.c
--- screen-3.9.8.org/attacher.c	Sun Dec  3 12:12:05 2000
+++ screen-3.9.8/attacher.c	Sun Dec  3 12:12:24 2000
@@ -33,6 +33,10 @@
 #include "screen.h"
 #include "extern.h"
 
+#ifdef USE_PAM
+#include <security/pam_appl.h>
+#endif /* USE_PAM */
+
 #include <pwd.h>
 
 static sigret_t AttacherSigInt __P(SIGPROTOARG);
@@ -69,6 +73,10 @@
 # endif
 #endif
 
+#ifdef USE_PAM
+static char *PAM_password;
+static char *PAM_name;
+#endif
 
 #ifdef MULTIUSER
 static int ContinuePlease;
@@ -718,14 +726,67 @@
     }
 }				/* LockTerminal */
 
+#ifdef USE_PAM
+static int PAM_conv (int num_msg,
+             const struct pam_message **msg,
+             struct pam_response **resp,
+             void *appdata_ptr) {
+    int replies = 0;
+    struct pam_response *reply = NULL;
+
+    reply = malloc(sizeof(struct pam_response)*num_msg);
+    if (!reply) return PAM_CONV_ERR;
+    #define COPY_STRING(s) (s) ? strdup(s) : NULL
+
+    for (replies = 0; replies < num_msg; replies++) {
+        switch (msg[replies]->msg_style) {
+        case PAM_PROMPT_ECHO_OFF:
+            /* wants password */
+            reply[replies].resp_retcode = PAM_SUCCESS;
+            reply[replies].resp = COPY_STRING(PAM_password);
+            break;
+        case PAM_TEXT_INFO:
+            /* ignore the informational mesage */
+            /* but first clear out any drek left by malloc */
+            reply[replies].resp = NULL;
+            break;
+        case PAM_PROMPT_ECHO_ON:
+            /* user name given to PAM already */
+            /* fall through */
+        default:
+            /* unknown or PAM_ERROR_MSG */
+            free (reply);
+            return PAM_CONV_ERR;
+        }
+    }
+    *resp = reply;
+    return PAM_SUCCESS;
+}
+
+static struct pam_conv PAM_conversation = {
+    &PAM_conv,
+    NULL
+};
+#endif
+
+
 /* -- original copyright by Luigi Cannelloni 1985 (luigi@faui70.UUCP) -- */
 static void
 screen_builtin_lck()
 {
   char fullname[100], *cp1, message[100 + 100];
-  char *pass, mypass[9];
+  char *pass;
+#ifdef USE_PAM
+  int pam_error;
+  pam_handle_t *pamh = NULL;
+#else
+  char mypass[9];
+#endif /* USE_PAM */
 
   pass = ppp->pw_passwd;
+
+#ifndef USE_PAM 
+  /* if we're using PAM this will evaluate to true. which we don't want. */
   if (pass == 0 || *pass == 0)
     {
       if ((pass = getpass("Key:   ")))
@@ -752,6 +813,7 @@
         }
       pass = 0;
     }
+#endif /* USE_PAM */
 
   debug("screen_builtin_lck looking in gcos field\n");
   strncpy(fullname, ppp->pw_gecos, sizeof(fullname) - 9);
@@ -780,6 +842,22 @@
           AttacherFinit(SIGARG);
           /* NOTREACHED */
         }
+#ifdef USE_PAM
+		PAM_password=cp1;
+	  	PAM_name=ppp->pw_name;
+
+	    pam_error = pam_start("screen", PAM_name, &PAM_conversation, &pamh);
+
+		if (pam_error == PAM_SUCCESS) {
+			pam_error = pam_authenticate(pamh, 0);
+			pam_end(pamh, PAM_SUCCESS);
+			if (pam_error == PAM_SUCCESS) {
+				memset(cp1,0,strlen(cp1));
+				PAM_password = NULL; 
+				break;
+			}
+		}
+#else
       if (pass)
         {
           if (!strncmp(crypt(cp1, pass), pass, strlen(pass)))
@@ -790,6 +868,7 @@
           if (!strcmp(cp1, mypass))
             break;
         }
+#endif
       debug("screen_builtin_lck: NO!!!!!\n");
     }
   debug("password ok.\n");
diff -urN screen-3.9.8.org/config.h.in screen-3.9.8/config.h.in
--- screen-3.9.8.org/config.h.in	Sun Dec  3 12:12:06 2000
+++ screen-3.9.8/config.h.in	Sun Dec  3 12:12:24 2000
@@ -565,6 +565,11 @@
  */
 #undef HAVE_SVR4_PTYS
 
+/*
+ * define HAVE_GETPT if you have the getpt() function.
+ */
+#undef HAVE_GETPT
+
 /* 
  * define PTYRANGE0 and or PTYRANGE1 if you want to adapt screen
  * to unusual environments. E.g. For SunOs the defaults are "qpr" and 
diff -urN screen-3.9.8.org/configure.in screen-3.9.8/configure.in
--- screen-3.9.8.org/configure.in	Sun Dec  3 12:12:06 2000
+++ screen-3.9.8/configure.in	Sun Dec  3 12:12:24 2000
@@ -28,6 +28,8 @@
 [echo "$1" 1>&AC_FD_MSG
 ])dnl
 
+AC_ARG_WITH(libpam, [  --with-libpam           use libpam for PAM support])
+
 dnl
 dnl Extract version from patchlevel.h
 dnl
@@ -648,6 +650,7 @@
 if test -c /dev/ptmx ; then
 AC_TRY_LINK([],[ptsname(0);grantpt(0);unlockpt(0);],AC_DEFINE(HAVE_SVR4_PTYS))
 fi
+AC_CHECK_FUNCS(getpt)
 
 AC_CHECKING(for ptyranges)
 if test -d /dev/ptym ; then
@@ -1044,6 +1047,31 @@
 fi
 )
 fi
+
+AC_SUBST(LIBPAM)
+AC_SUBST(USEPAM)
+if test "$with_libpam" = "yes"; then
+	dnl AC_CHECK_LIB(pam, pam_start, AC_DEFINE(PAM) LIBPAM=-lpam)
+	dnl the above doesn't work as there is no libpam.a (only .so)
+	dnl XXX - libpam_misc is probably Linux-PAM specific
+	LIBPAM="-lpam -lpam_misc -ldl"
+	USEPAM="-DUSE_PAM"
+	AC_DEFINE(PAM)
+#	AC_CACHE_CHECK(whether pam_strerror needs two arguments,
+#		ac_cv_pam_strerror_needs_two_args,
+#		AC_TRY_COMPILE(
+#				[#include <security/pam_appl.h>],
+#				[ pam_handle_t *pamh; pam_strerror(pamh, PAM_SUCCESS);
+#	],
+#				ac_cv_pam_strerror_needs_two_args=yes,
+#				ac_cv_pam_strerror_needs_two_args=no
+#		)
+#	)
+#	if test "$ac_cv_pam_strerror_needs_two_args" = "yes"; then
+#			AC_DEFINE(PAM_STRERROR_NEEDS_TWO_ARGS)
+#	fi
+fi
+
 
 dnl AC_CHECK_HEADER(shadow.h, AC_DEFINE(SHADOWPW))
 AC_CHECKING(getspnam)

diff -urN screen-3.9.8.org/etc/etcscreenrc screen-3.9.8/etc/etcscreenrc
--- screen-3.9.8.org/etc/etcscreenrc	Sun Dec  3 12:12:06 2000
+++ screen-3.9.8/etc/etcscreenrc	Sun Dec  3 12:12:24 2000
@@ -1,6 +1,6 @@
 #3.3
 # This is a global screenrc file
-# Install this file as /usr/local/etc/screenrc. See config.h
+# Install this file as /etc/screenrc. See config.h
 #
 # Flaws of termcap and standard settings are done here.
 # Note: This file should not be shared between different hosts.
@@ -97,3 +97,6 @@
 # colon takes a parameter since screen-3.8.6
 bind 'R' colon "screen -ln rlogin faui -8^b^b^b"
 bind 'P' colon "^p"
+
+# On Debian GNU/Linux, `<--' (Backspace key) should send char `\177':
+bindkey -k kb stuff "\177"
diff -urN screen-3.9.8.org/fileio.c screen-3.9.8/fileio.c
--- screen-3.9.8.org/fileio.c	Sun Dec  3 12:12:05 2000
+++ screen-3.9.8/fileio.c	Sun Dec  3 12:12:24 2000
@@ -364,7 +364,7 @@
     case DUMP_EXCHANGE:
       strncpy(fn, BufferFile, sizeof(fn) - 1);
       fn[sizeof(fn) - 1] = 0;
-      public = !strcmp(fn, DEFAULT_BUFFERFILE);
+      public = !strcmp(fn, bufferfile);
 # ifdef HAVE_LSTAT
       exists = !lstat(fn, &stb);
       if (public && exists && (S_ISLNK(stb.st_mode) || stb.st_nlink > 1))
diff -urN screen-3.9.8.org/os.h screen-3.9.8/os.h
--- screen-3.9.8.org/os.h	Sun Dec  3 12:12:05 2000
+++ screen-3.9.8/os.h	Sun Dec  3 12:12:23 2000
@@ -82,6 +82,9 @@
 #  undef strlen
 # else /* NEWSOS */
 #  include <strings.h>
+#  if defined(__GLIBC__) && (__GLIBC__ >= 2)
+#   include <string.h>
+#  endif
 # endif /* NEWSOS */
 #else /* SYSV */
 # if defined(SVR4) || defined(NEWSOS)
diff -urN screen-3.9.8.org/process.c screen-3.9.8/process.c
--- screen-3.9.8.org/process.c	Sun Dec  3 12:12:05 2000
+++ screen-3.9.8/process.c	Sun Dec  3 12:12:24 2000
@@ -1944,7 +1944,7 @@
 #ifdef COPY_PASTE
     case RC_BUFFERFILE:
       if (*args == 0)
-	BufferFile = SaveStr(DEFAULT_BUFFERFILE);
+	BufferFile = SaveStr(bufferfile);
       else if (ParseSaveStr(act, &BufferFile))
         break;
       if (msgok)
diff -urN screen-3.9.8.org/pty.c screen-3.9.8/pty.c
--- screen-3.9.8.org/pty.c	Sun Dec  3 12:12:05 2000
+++ screen-3.9.8/pty.c	Sun Dec  3 12:12:24 2000
@@ -242,11 +242,15 @@
 {
   register int f;
   char *m, *ptsname();
-  int unlockpt __P((int)), grantpt __P((int));
+  int unlockpt __P((int)), grantpt __P((int)), getpt __P((void));
   sigret_t (*sigcld)__P(SIGPROTOARG);
 
+#ifdef HAVE_GETPT
+  if ((f = getpt()) == -1)
+#else
   strcpy(PtyName, "/dev/ptmx");
   if ((f = open(PtyName, O_RDWR | O_NOCTTY)) == -1)
+#endif
     return -1;
 
   /*
diff -urN screen-3.9.8.org/screen.c screen-3.9.8/screen.c
--- screen-3.9.8.org/screen.c	Sun Dec  3 12:12:05 2000
+++ screen-3.9.8/screen.c	Sun Dec  3 12:15:09 2000
@@ -103,6 +103,7 @@
 FILE *dfp;
 #endif
 
+char bufferfile[MAXPATHLEN];
 
 extern char *blank, *null, Term[], screenterm[], **environ, Termcap[];
 int force_vt = 1;
@@ -260,7 +261,7 @@
 char *name;
 struct passwd *ppp;
 {
-  int n;
+  int n, len;
 #ifdef SHADOWPW
   struct spwd *sss = NULL;
   static char *spw = NULL;
@@ -274,13 +275,19 @@
 pw_try_again:
 #endif
   n = 0;
+  len = 13;
   if (ppp->pw_passwd[0] == '#' && ppp->pw_passwd[1] == '#' &&
       strcmp(ppp->pw_passwd + 2, ppp->pw_name) == 0)
     n = 13;
-  for (; n < 13; n++)
+  else if (!strncmp(ppp->pw_passwd, "$1$", 3)) {      /* MD5-based passwords */
+    n = 13;
+    len = 34;
+  }
+  for (; n < len; n++)
     {
       char c = ppp->pw_passwd[n];
       if (!(c == '.' || c == '/' || c == '$' ||
+            (len == 34 && c == '$') ||
 	    (c >= '0' && c <= '9') || 
 	    (c >= 'a' && c <= 'z') || 
 	    (c >= 'A' && c <= 'Z'))) 
@@ -421,9 +428,6 @@
   logtstamp_string = SaveStr("-- %n:%t -- time-stamp -- %M/%d/%y %c:%s --\n");
   hstatusstring = SaveStr("%h");
   captionstring = SaveStr("%3n %t");
-#ifdef COPY_PASTE
-  BufferFile = SaveStr(DEFAULT_BUFFERFILE);
-#endif
   ShellProg = NULL;
 #ifdef POW_DETACH
   PowDetachString = 0;
@@ -840,6 +844,7 @@
 #endif /* DEBUG */
     }
   
+  snprintf(bufferfile,sizeof(bufferfile),"%s/.screen-exchange", home);
 #ifdef _MODE_T
   oumask = umask(0);		/* well, unsigned never fails? jw. */
 #else
@@ -916,8 +921,8 @@
 		Panic(0, "'%s' must be a directory.", SockDir);
               if (eff_uid == 0 && real_uid && st.st_uid != eff_uid)
 		Panic(0, "Directory '%s' must be owned by root.", SockDir);
-	      n = (eff_uid == 0 && (real_uid || (st.st_mode & 0775) != 0775)) ? 0755 :
-	          (eff_gid == st.st_gid && eff_gid != real_gid) ? 0775 :
+	      n = (eff_gid == st.st_gid && eff_gid != real_gid) ? 0775 :
+		  (eff_uid == 0 && (real_uid || (st.st_mode & 0777) != 0777)) ? 0755 :
 		  0777;
 	      if ((st.st_mode & 0777) != n)
 		Panic(0, "Directory '%s' must have mode %03o.", SockDir, n);
diff -urN screen-3.9.8.org/screen.h screen-3.9.8/screen.h
--- screen-3.9.8.org/screen.h	Sun Dec  3 12:12:05 2000
+++ screen-3.9.8/screen.h	Sun Dec  3 12:12:23 2000
@@ -44,6 +44,7 @@
 #include "layer.h"
 #include "term.h"
 
+extern char bufferfile[MAXPATHLEN];
 
 #ifdef DEBUG
 # define STATIC		/* a function that the debugger should see */
diff -urN screen-3.9.8.org/terminfo/screencap screen-3.9.8/terminfo/screencap
--- screen-3.9.8.org/terminfo/screencap	Sun Dec  3 12:12:06 2000
+++ screen-3.9.8/terminfo/screencap	Sun Dec  3 12:12:24 2000
@@ -9,7 +9,7 @@
 	:AL=\E[%dL:dl=\E[M:DL=\E[%dM:cs=\E[%i%d;%dr:dc=\E[P:\
 	:DC=\E[%dP:im=\E[4h:ei=\E[4l:IC=\E[%d@:\
 	:ks=\E[?1h\E=:ke=\E[?1l\E>:vb=\Eg:\
-	:ku=\EOA:kd=\EOB:kr=\EOC:kl=\EOD:kb=^H:\
+	:ku=\EOA:kd=\EOB:kr=\EOC:kl=\EOD:kb=\177:\
 	:k1=\EOP:k2=\EOQ:k3=\EOR:k4=\EOS:k5=\E[15~:k6=\E[17~:\
 	:k7=\E[18~:k8=\E[19~:k9=\E[20~:k;=\E[21~:F1=\E[23~:F2=\E[24~:\
 	:kh=\E[1~:kI=\E[2~:kD=\E[3~:kH=\E[4~:@7=\E[4~:kP=\E[5~:\
diff -urN screen-3.9.8.org/terminfo/screeninfo.src screen-3.9.8/terminfo/screeninfo.src
--- screen-3.9.8.org/terminfo/screeninfo.src	Sun Dec  3 12:12:06 2000
+++ screen-3.9.8/terminfo/screeninfo.src	Sun Dec  3 12:12:24 2000
@@ -9,7 +9,7 @@
 	dl=\E[%p1%dM, dl1=\E[M, ed=\E[J, el=\E[K, el1=\E[1K,
 	enacs=\E(B\E)0, home=\E[H,
 	ht=\t, hts=\EH, ich=\E[%p1%d@, il=\E[%p1%dL, il1=\E[L,
-	ind=\n, is2=\E)0, kbs=\b, kcub1=\EOD, kcud1=\EOB,
+	ind=\n, is2=\E)0, kbs=\177, kcub1=\EOD, kcud1=\EOB,
 	kcuf1=\EOC, kcuu1=\EOA, kdch1=\E[3~, kf1=\EOP,
 	kf10=\E[21~, kf11=\E[23~, kf12=\E[24~, kf2=\EOQ,
 	kf3=\EOR, kf4=\EOS, kf5=\E[15~, kf6=\E[17~,
@@ -33,7 +33,7 @@
 	dl=\E[%p1%dM, dl1=\E[M, ed=\E[J, el=\E[K, el1=\E[1K,
 	enacs=\E(B\E)0, home=\E[H,
 	ht=\t, hts=\EH, ich=\E[%p1%d@, il=\E[%p1%dL, il1=\E[L,
-	ind=\n, is2=\E)0, kbs=\b, kcub1=\EOD, kcud1=\EOB,
+	ind=\n, is2=\E)0, kbs=\177, kcub1=\EOD, kcud1=\EOB,
 	kcuf1=\EOC, kcuu1=\EOA, kdch1=\E[3~, kf1=\EOP,
 	kf10=\E[21~, kf11=\E[23~, kf12=\E[24~, kf2=\EOQ,
 	kf3=\EOR, kf4=\EOS, kf5=\E[15~, kf6=\E[17~,
diff -urN screen-3.9.8.org/window.c screen-3.9.8/window.c
--- screen-3.9.8.org/window.c	Sun Dec  3 12:12:05 2000
+++ screen-3.9.8/window.c	Sun Dec  3 12:12:24 2000
@@ -1517,6 +1517,12 @@
 	FreePseudowin(w);
 	return -1;
       }
+    if (ioctl(w->w_ptyfd, TIOCPKT, (char *)&flag))
+      {
+	Msg(errno, "TIOCPKT ioctl on parent");
+	FreePseudowin(w);
+	return -1;
+      }
   }
 #endif /* TIOCPKT */
   
@@ -1553,6 +1559,14 @@
   evdeq(&pwin->p_writeev);
   free((char *)pwin);
   w->w_pwin = NULL;
+#ifdef TIOCPKT
+  {
+    int flag = 1;
+
+    if (ioctl(w->w_ptyfd, TIOCPKT, (char *)&flag))
+      Msg(errno, "TIOCPKT reset on parent failed");
+  }
+#endif /* TIOCPKT */
 }
 
 #endif /* PSEUDOS */
